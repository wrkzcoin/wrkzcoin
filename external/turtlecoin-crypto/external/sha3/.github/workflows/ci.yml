name: CI Build Tests

on:
  push:
  pull_request:
  release:
    types: [published]

jobs:
  cpp_build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    name: ${{ matrix.os }} - C++ Test
    env:
      MSBUILD_PATH: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/MSBuild/Current/Bin"
    steps:
    - uses: actions/checkout@v1
    - name: Create Build Directory
      run: mkdir build
    - name: Install Dependencies (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt update
        sudo apt install -y gcc-8 g++-8
    - name: Install Dependencies (OSX)
      if: matrix.os == 'macos-latest'
      run: |
        brew cask uninstall --force oclint || true
        brew install llvm || brew upgrade llvm
    - name: Execute CMake Process (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        export CC=gcc-8
        export CXX=g++-8
        cd build
        cmake .. -DBUILD_BENCHMARK=1
    - name: Execute CMake Process (OSX)
      if: matrix.os == 'macos-latest'
      run: |
        export CC=/usr/local/opt/llvm/bin/clang
        export CXX=/usr/local/opt/llvm/bin/clang++
        cd build
        cmake .. -DBUILD_BENCHMARK=1
    - name: Execute CMake Process (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        cd build
        cmake -G "Visual Studio 16 2019" -A x64 .. -DBUILD_BENCHMARK=1
    - name: Build Project (Linux & OSX)
      if: matrix.os != 'windows-latest'
      run: |
        cd build
        make
    - name: Build Project (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        $env:PATH = "$env:PATH;$env:MSBUILD_PATH"
        cd build
        MSBuild sha3.sln /p:Configuration=Release /m
    - name: Run Benchmarks (Linux & OSX)
      if: matrix.os != 'windows-latest'
      run: |
        cd build
        ./benchmark
    - name: Run Benchmarks (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        cd build/Release
        ./benchmark.exe
